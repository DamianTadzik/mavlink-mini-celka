<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget parent="main_window" name="Main Window">
  <Tab containers="1" tab_name="Telemetry statistics">
   <Container>
    <DockSplitter sizes="0.50059;0.49941" orientation="-" count="2">
     <DockSplitter sizes="0.500368;0.499632" orientation="|" count="2">
      <DockArea name="UART utilisation [%]">
       <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
        <range right="18.614898" bottom="-2.531192" top="103.778887" left="0.000000"/>
        <limitY/>
        <curve color="#1f77b4" name="/fields/uart/util_rx"/>
        <curve color="#d62728" name="/fields/uart/util_tx"/>
       </plot>
      </DockArea>
      <DockSplitter sizes="0.501182;0.498818" orientation="-" count="2">
       <DockArea name="CAN frames per second">
        <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
         <range right="18.614898" bottom="66.737874" top="78.216967" left="0.000000"/>
         <limitY/>
         <curve color="#f14cc1" name="/fields/can/fps"/>
        </plot>
       </DockArea>
       <DockArea name="CAN decode errors">
        <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
         <range right="18.614898" bottom="-0.100000" top="0.100000" left="0.000000"/>
         <limitY/>
         <curve color="#9467bd" name="/fields/can/decode_errors_last_sec"/>
        </plot>
       </DockArea>
      </DockSplitter>
     </DockSplitter>
     <DockSplitter sizes="0.502575;0.497425" orientation="|" count="2">
      <DockArea name="Telemetry SNR [dB]">
       <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
        <range right="18.614898" bottom="25.592105" top="55.986842" left="0.000000"/>
        <limitY/>
        <curve color="#1ac938" name="/fields/link/rem_snr"/>
        <curve color="#ff7f0e" name="/fields/link/snr"/>
       </plot>
      </DockArea>
      <DockSplitter sizes="0.5;0.5" orientation="-" count="2">
       <DockArea name="Bridge loop time">
        <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
         <range right="18.614898" bottom="9.555602" top="31.424260" left="0.000000"/>
         <limitY/>
         <curve color="#17becf" name="/fields/bridge/loop_time_ms"/>
        </plot>
       </DockArea>
       <DockArea name="Bridge CPU usage">
        <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
         <range right="18.614898" bottom="2.812500" top="14.887500" left="0.000000"/>
         <limitY/>
         <curve color="#bcbd22" name="/fields/bridge/cpu_usage"/>
        </plot>
       </DockArea>
      </DockSplitter>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="Power - Steering and Motor">
   <Container>
    <DockSplitter sizes="1" orientation="-" count="1">
     <DockSplitter sizes="0.500368;0.499632" orientation="|" count="2">
      <DockSplitter sizes="0.334515;0.330969;0.334515" orientation="-" count="3">
       <DockArea name="...">
        <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
         <range right="18.614898" bottom="-0.100000" top="0.100000" left="0.000000"/>
         <limitY/>
         <curve color="#1f77b4" name="/fields/ODRIVE_GET_BUS_VOLTAGE_CURRENT/Bus_Current"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
         <range right="18.614898" bottom="-0.100000" top="0.100000" left="0.000000"/>
         <limitY/>
         <curve color="#1f77b4" name="/fields/ODRIVE_GET_BUS_VOLTAGE_CURRENT/Bus_Current"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
         <range right="1.000000" bottom="0.000000" top="1.000000" left="0.000000"/>
         <limitY/>
        </plot>
       </DockArea>
      </DockSplitter>
      <DockSplitter sizes="0.333333;0.333333;0.333333" orientation="-" count="3">
       <DockArea name="...">
        <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
         <range right="18.614898" bottom="-0.100000" top="0.100000" left="0.000000"/>
         <limitY/>
         <curve color="#ff7f0e" name="/fields/ACTUATOR_STEERING_FEEDBACK/CURRENT"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
         <range right="18.614898" bottom="6.086000" top="6.286000" left="0.000000"/>
         <limitY/>
         <curve color="#f14cc1" name="/fields/ACTUATOR_STEERING_FEEDBACK/VOLTAGE"/>
        </plot>
       </DockArea>
       <DockArea name="...">
        <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
         <range right="1.000000" bottom="0.000000" top="1.000000" left="0.000000"/>
         <limitY/>
        </plot>
       </DockArea>
      </DockSplitter>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <Tab containers="1" tab_name="Distance sensors">
   <Container>
    <DockSplitter sizes="1" orientation="-" count="1">
     <DockArea name="Distance mm">
      <plot flip_y="false" mode="TimeSeries" style="Lines" flip_x="false">
       <range right="18.614898" bottom="56.150000" top="259.850000" left="0.000000"/>
       <limitY/>
       <curve color="#d62728" name="/fields/DISTANCE_ACHTER_FEEDBACK/RANGE_MM_L"/>
       <curve color="#1ac938" name="/fields/DISTANCE_ACHTER_FEEDBACK/RANGE_MM_R"/>
      </plot>
     </DockArea>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="2"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <parameters delimiter="0" time_axis=""/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad Parquet">
   <default prevTimestamp="" radioIndexChecked="0" dateFromat="yyyy-MM-dd hh:mm:ss" parseDateTime="0"/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="MQTT Subscriber (Mosquitto)"/>
  <plugin ID="UDP Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indices, not Lua indices&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <previouslyLoaded_Streamer name="UDP Server"/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations/>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>

