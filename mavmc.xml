<?xml version="1.0"?>
<mavlink>
    <version>3</version>

    <enums>
        <enum name="MAV_TYPE">
            <description>MAVLINK component type reported in HEARTBEAT message. Flight controllers must report the type of the vehicle on which they are mounted (e.g. MAV_TYPE_OCTOROTOR). All other components must report a value appropriate for their type (e.g. a camera must use MAV_TYPE_CAMERA).</description>
            <entry value="0" name="MAV_TYPE_GENERIC">
                <description>Generic micro air vehicle</description>
            </entry>
            <entry value="1" name="MAV_TYPE_FIXED_WING">
                <description>Fixed wing aircraft.</description>
            </entry>
            <entry value="2" name="MAV_TYPE_QUADROTOR">
                <description>Quadrotor</description>
            </entry>
            <entry value="3" name="MAV_TYPE_COAXIAL">
                <description>Coaxial helicopter</description>
            </entry>
            <entry value="4" name="MAV_TYPE_HELICOPTER">
                <description>Normal helicopter with tail rotor.</description>
            </entry>
            <entry value="5" name="MAV_TYPE_ANTENNA_TRACKER">
                <description>Ground installation</description>
            </entry>
            <entry value="6" name="MAV_TYPE_GCS">
                <description>Operator control unit / ground control station</description>
            </entry>
            <entry value="7" name="MAV_TYPE_AIRSHIP">
                <description>Airship, controlled</description>
            </entry>
            <entry value="8" name="MAV_TYPE_FREE_BALLOON">
                <description>Free balloon, uncontrolled</description>
            </entry>
            <entry value="9" name="MAV_TYPE_ROCKET">
                <description>Rocket</description>
            </entry>
            <entry value="10" name="MAV_TYPE_GROUND_ROVER">
                <description>Ground rover</description>
            </entry>
            <entry value="11" name="MAV_TYPE_SURFACE_BOAT">
                <description>Surface vessel, boat, ship</description>
            </entry>
            <entry value="12" name="MAV_TYPE_SUBMARINE">
                <description>Submarine</description>
            </entry>
            <entry value="13" name="MAV_TYPE_HEXAROTOR">
                <description>Hexarotor</description>
            </entry>
            <entry value="14" name="MAV_TYPE_OCTOROTOR">
                <description>Octorotor</description>
            </entry>
            <entry value="15" name="MAV_TYPE_TRICOPTER">
                <description>Tricopter</description>
            </entry>
            <entry value="16" name="MAV_TYPE_FLAPPING_WING">
                <description>Flapping wing</description>
            </entry>
            <entry value="17" name="MAV_TYPE_KITE">
                <description>Kite</description>
            </entry>
            <entry value="18" name="MAV_TYPE_ONBOARD_CONTROLLER">
                <description>Onboard companion controller</description>
            </entry>
            <entry value="19" name="MAV_TYPE_VTOL_TAILSITTER_DUOROTOR">
                <description>Two-rotor Tailsitter VTOL that additionally uses control surfaces in vertical operation. Note, value previously named MAV_TYPE_VTOL_DUOROTOR.</description>
            </entry>
            <entry value="20" name="MAV_TYPE_VTOL_TAILSITTER_QUADROTOR">
                <description>Quad-rotor Tailsitter VTOL using a V-shaped quad config in vertical operation. Note: value previously named MAV_TYPE_VTOL_QUADROTOR.</description>
            </entry>
            <entry value="21" name="MAV_TYPE_VTOL_TILTROTOR">
                <description>Tiltrotor VTOL. Fuselage and wings stay (nominally) horizontal in all flight phases. It able to tilt (some) rotors to provide thrust in cruise flight.</description>
            </entry>
            <entry value="22" name="MAV_TYPE_VTOL_FIXEDROTOR">
                <description>VTOL with separate fixed rotors for hover and cruise flight. Fuselage and wings stay (nominally) horizontal in all flight phases.</description>
            </entry>
            <entry value="23" name="MAV_TYPE_VTOL_TAILSITTER">
                <description>Tailsitter VTOL. Fuselage and wings orientation changes depending on flight phase: vertical for hover, horizontal for cruise. Use more specific VTOL MAV_TYPE_VTOL_TAILSITTER_DUOROTOR or MAV_TYPE_VTOL_TAILSITTER_QUADROTOR if appropriate.</description>
            </entry>
            <entry value="24" name="MAV_TYPE_VTOL_TILTWING">
                <description>Tiltwing VTOL. Fuselage stays horizontal in all flight phases. The whole wing, along with any attached engine, can tilt between vertical and horizontal mode.</description>
            </entry>
            <!-- Entry 25 reserved for other VTOL airframe -->
            <entry value="25" name="MAV_TYPE_VTOL_RESERVED5">
                <description>VTOL reserved 5</description>
            </entry>
            <entry value="26" name="MAV_TYPE_GIMBAL">
                <description>Gimbal</description>
            </entry>
            <entry value="27" name="MAV_TYPE_ADSB">
                <description>ADSB system</description>
            </entry>
            <entry value="28" name="MAV_TYPE_PARAFOIL">
                <description>Steerable, nonrigid airfoil</description>
            </entry>
            <entry value="29" name="MAV_TYPE_DODECAROTOR">
                <description>Dodecarotor</description>
            </entry>
            <entry value="30" name="MAV_TYPE_CAMERA">
                <description>Camera</description>
            </entry>
            <entry value="31" name="MAV_TYPE_CHARGING_STATION">
                <description>Charging station</description>
            </entry>
            <entry value="32" name="MAV_TYPE_FLARM">
                <description>FLARM collision avoidance system</description>
            </entry>
            <entry value="33" name="MAV_TYPE_SERVO">
                <description>Servo</description>
            </entry>
            <entry value="34" name="MAV_TYPE_ODID">
                <description>Open Drone ID. See https://mavlink.io/en/services/opendroneid.html.</description>
            </entry>
            <entry value="35" name="MAV_TYPE_DECAROTOR">
                <description>Decarotor</description>
            </entry>
            <entry value="36" name="MAV_TYPE_BATTERY">
                <description>Battery</description>
            </entry>
            <entry value="37" name="MAV_TYPE_PARACHUTE">
                <description>Parachute</description>
            </entry>
            <entry value="38" name="MAV_TYPE_LOG">
                <description>Log</description>
            </entry>
            <entry value="39" name="MAV_TYPE_OSD">
                <description>OSD</description>
            </entry>
            <entry value="40" name="MAV_TYPE_IMU">
                <description>IMU</description>
            </entry>
            <entry value="41" name="MAV_TYPE_GPS">
                <description>GPS</description>
            </entry>
            <entry value="42" name="MAV_TYPE_WINCH">
                <description>Winch</description>
            </entry>
            <entry value="43" name="MAV_TYPE_GENERIC_MULTIROTOR">
                <description>Generic multirotor that does not fit into a specific type or whose type is unknown</description>
            </entry>
            <entry value="44" name="MAV_TYPE_ILLUMINATOR">
                <description>Illuminator. An illuminator is a light source that is used for lighting up dark areas external to the system: e.g. a torch or searchlight (as opposed to a light source for illuminating the system itself, e.g. an indicator light).</description>
            </entry>
            <entry value="45" name="MAV_TYPE_SPACECRAFT_ORBITER">
                <description>Orbiter spacecraft. Includes satellites orbiting terrestrial and extra-terrestrial bodies. Follows NASA Spacecraft Classification.</description>
            </entry>
            <entry value="46" name="MAV_TYPE_GROUND_QUADRUPED">
                <description>A generic four-legged ground vehicle (e.g., a robot dog).</description>
            </entry>
            <entry value="47" name="MAV_TYPE_VTOL_GYRODYNE">
                <description>VTOL hybrid of helicopter and autogyro. It has a main rotor for lift and separate propellers for forward flight. The rotor must be powered for hover but can autorotate in cruise flight. See: https://en.wikipedia.org/wiki/Gyrodyne</description>
            </entry>
            <entry value="48" name="MAV_TYPE_GRIPPER">
                <description>Gripper</description>
            </entry>
        </enum>
        <enum name="MAV_AUTOPILOT">
            <description>Micro air vehicle / autopilot classes. This identifies the individual model.</description>
            <entry value="0" name="MAV_AUTOPILOT_GENERIC">
                <description>Generic autopilot, full support for everything</description>
            </entry>
            <entry value="1" name="MAV_AUTOPILOT_RESERVED">
                <description>Reserved for future use.</description>
            </entry>
            <entry value="2" name="MAV_AUTOPILOT_SLUGS">
                <description>SLUGS autopilot, http://slugsuav.soe.ucsc.edu</description>
            </entry>
            <entry value="3" name="MAV_AUTOPILOT_ARDUPILOTMEGA">
                <description>ArduPilot - Plane/Copter/Rover/Sub/Tracker, https://ardupilot.org</description>
            </entry>
            <entry value="4" name="MAV_AUTOPILOT_OPENPILOT">
                <description>OpenPilot, http://openpilot.org</description>
            </entry>
            <entry value="5" name="MAV_AUTOPILOT_GENERIC_WAYPOINTS_ONLY">
                <description>Generic autopilot only supporting simple waypoints</description>
            </entry>
            <entry value="6" name="MAV_AUTOPILOT_GENERIC_WAYPOINTS_AND_SIMPLE_NAVIGATION_ONLY">
                <description>Generic autopilot supporting waypoints and other simple navigation commands</description>
            </entry>
            <entry value="7" name="MAV_AUTOPILOT_GENERIC_MISSION_FULL">
                <description>Generic autopilot supporting the full mission command set</description>
            </entry>
            <entry value="8" name="MAV_AUTOPILOT_INVALID">
                <description>No valid autopilot, e.g. a GCS or other MAVLink component</description>
            </entry>
            <entry value="9" name="MAV_AUTOPILOT_PPZ">
                <description>PPZ UAV - http://nongnu.org/paparazzi</description>
            </entry>
            <entry value="10" name="MAV_AUTOPILOT_UDB">
                <description>UAV Dev Board</description>
            </entry>
            <entry value="11" name="MAV_AUTOPILOT_FP">
                <description>FlexiPilot</description>
            </entry>
            <entry value="12" name="MAV_AUTOPILOT_PX4">
                <description>PX4 Autopilot - http://px4.io/</description>
            </entry>
            <entry value="13" name="MAV_AUTOPILOT_SMACCMPILOT">
                <description>SMACCMPilot - http://smaccmpilot.org</description>
            </entry>
            <entry value="14" name="MAV_AUTOPILOT_AUTOQUAD">
                <description>AutoQuad -- http://autoquad.org</description>
            </entry>
            <entry value="15" name="MAV_AUTOPILOT_ARMAZILA">
                <description>Armazila -- http://armazila.com</description>
            </entry>
            <entry value="16" name="MAV_AUTOPILOT_AEROB">
                <description>Aerob -- http://aerob.ru</description>
            </entry>
            <entry value="17" name="MAV_AUTOPILOT_ASLUAV">
                <description>ASLUAV autopilot -- http://www.asl.ethz.ch</description>
            </entry>
            <entry value="18" name="MAV_AUTOPILOT_SMARTAP">
                <description>SmartAP Autopilot - http://sky-drones.com</description>
            </entry>
            <entry value="19" name="MAV_AUTOPILOT_AIRRAILS">
                <description>AirRails - http://uaventure.com</description>
            </entry>
            <entry value="20" name="MAV_AUTOPILOT_REFLEX">
                <description>Fusion Reflex - https://fusion.engineering</description>
            </entry>
        </enum>
        <enum name="MAV_MODE_FLAG" bitmask="true">
            <description>These flags encode the MAV mode, see MAV_MODE enum for useful combinations.</description>
            <entry value="128" name="MAV_MODE_FLAG_SAFETY_ARMED">
                <description>0b10000000 MAV safety set to armed. Motors are enabled / running / can start. Ready to fly. Additional note: this flag is to be ignore when sent in the command MAV_CMD_DO_SET_MODE and MAV_CMD_COMPONENT_ARM_DISARM shall be used instead. The flag can still be used to report the armed state.</description>
            </entry>
            <entry value="64" name="MAV_MODE_FLAG_MANUAL_INPUT_ENABLED">
                <description>0b01000000 remote control input is enabled.</description>
            </entry>
            <entry value="32" name="MAV_MODE_FLAG_HIL_ENABLED">
                <description>0b00100000 hardware in the loop simulation. All motors / actuators are blocked, but internal software is full operational.</description>
            </entry>
            <entry value="16" name="MAV_MODE_FLAG_STABILIZE_ENABLED">
                <description>0b00010000 system stabilizes electronically its attitude (and optionally position). It needs however further control inputs to move around.</description>
            </entry>
            <entry value="8" name="MAV_MODE_FLAG_GUIDED_ENABLED">
                <description>0b00001000 guided mode enabled, system flies waypoints / mission items.</description>
            </entry>
            <entry value="4" name="MAV_MODE_FLAG_AUTO_ENABLED">
                <description>0b00000100 autonomous mode enabled, system finds its own goal positions. Guided flag can be set or not, depends on the actual implementation.</description>
            </entry>
            <entry value="2" name="MAV_MODE_FLAG_TEST_ENABLED">
                <description>0b00000010 system has a test mode enabled. This flag is intended for temporary system tests and should not be used for stable implementations.</description>
            </entry>
            <entry value="1" name="MAV_MODE_FLAG_CUSTOM_MODE_ENABLED">
                <description>0b00000001 system-specific custom mode is enabled. When using this flag to enable a custom mode all other flags should be ignored.</description>
            </entry>
        </enum>
        <enum name="MAV_MODE_FLAG_DECODE_POSITION" bitmask="true">
            <description>These values encode the bit positions of the decode position. These values can be used to read the value of a flag bit by combining the base_mode variable with AND with the flag position value. The result will be either 0 or 1, depending on if the flag is set or not.</description>
            <entry value="128" name="MAV_MODE_FLAG_DECODE_POSITION_SAFETY">
                <description>First bit:  10000000</description>
            </entry>
            <entry value="64" name="MAV_MODE_FLAG_DECODE_POSITION_MANUAL">
                <description>Second bit: 01000000</description>
            </entry>
            <entry value="32" name="MAV_MODE_FLAG_DECODE_POSITION_HIL">
                <description>Third bit:  00100000</description>
            </entry>
            <entry value="16" name="MAV_MODE_FLAG_DECODE_POSITION_STABILIZE">
                <description>Fourth bit: 00010000</description>
            </entry>
            <entry value="8" name="MAV_MODE_FLAG_DECODE_POSITION_GUIDED">
                <description>Fifth bit:  00001000</description>
            </entry>
            <entry value="4" name="MAV_MODE_FLAG_DECODE_POSITION_AUTO">
                <description>Sixth bit:   00000100</description>
            </entry>
            <entry value="2" name="MAV_MODE_FLAG_DECODE_POSITION_TEST">
                <description>Seventh bit: 00000010</description>
            </entry>
            <entry value="1" name="MAV_MODE_FLAG_DECODE_POSITION_CUSTOM_MODE">
                <description>Eighth bit: 00000001</description>
            </entry>
        </enum>
        <enum name="MAV_STATE">
            <entry value="0" name="MAV_STATE_UNINIT">
                <description>Uninitialized system, state is unknown.</description>
            </entry>
            <entry value="1" name="MAV_STATE_BOOT">
                <description>System is booting up.</description>
            </entry>
            <entry value="2" name="MAV_STATE_CALIBRATING">
                <description>System is calibrating and not flight-ready.</description>
            </entry>
            <entry value="3" name="MAV_STATE_STANDBY">
                <description>System is grounded and on standby. It can be launched any time.</description>
            </entry>
            <entry value="4" name="MAV_STATE_ACTIVE">
                <description>System is active and might be already airborne. Motors are engaged.</description>
            </entry>
            <entry value="5" name="MAV_STATE_CRITICAL">
                <description>System is in a non-normal flight mode (failsafe). It can however still navigate.</description>
            </entry>
            <entry value="6" name="MAV_STATE_EMERGENCY">
                <description>System is in a non-normal flight mode (failsafe). It lost control over parts or over the whole airframe. It is in mayday and going down.</description>
            </entry>
            <entry value="7" name="MAV_STATE_POWEROFF">
                <description>System just initialized its power-down sequence, will shut down now.</description>
            </entry>
            <entry value="8" name="MAV_STATE_FLIGHT_TERMINATION">
                <description>System is terminating itself (failsafe or commanded).</description>
            </entry>
        </enum>
    </enums>
    
    <messages>
        <!-- HEARTBEAT (ID 0, z minimal.xml) -->
        <message id="0" name="HEARTBEAT">
            <description>The heartbeat message shows that a system or component is present and responding. The type and autopilot fields (along with the message component id), allow the receiving system to treat further messages from this system appropriately (e.g. by laying out the user interface based on the autopilot). This microservice is documented at https://mavlink.io/en/services/heartbeat.html</description>
            <field type="uint8_t" name="type" enum="MAV_TYPE">Vehicle or component type. For a flight controller component the vehicle type (quadrotor, helicopter, etc.). For other components the component type (e.g. camera, gimbal, etc.). This should be used in preference to component id for identifying the component type.</field>
            <field type="uint8_t" name="autopilot" enum="MAV_AUTOPILOT">Autopilot type / class. Use MAV_AUTOPILOT_INVALID for components that are not flight controllers.</field>
            <field type="uint8_t" name="base_mode" enum="MAV_MODE_FLAG">System mode bitmap.</field>
            <field type="uint32_t" name="custom_mode">A bitfield for use for autopilot-specific flags</field>
            <field type="uint8_t" name="system_status" enum="MAV_STATE">System status flag.</field>
            <field type="uint8_t_mavlink_version" name="mavlink_version">MAVLink version, not writable by user, gets added by protocol because of magic data type: uint8_t_mavlink_version</field>
        </message>
        
        <!-- RADIO_STATUS (ID 166, z common.xml) -->
        <message id="109" name="RADIO_STATUS">
            <description>Status generated by radio and injected into MAVLink stream.</description>
            <field type="uint8_t" name="rssi" invalid="UINT8_MAX">Local (message sender) received signal strength indication in device-dependent units/scale. Values: [0-254], UINT8_MAX: invalid/unknown.</field>
            <field type="uint8_t" name="remrssi" invalid="UINT8_MAX">Remote (message receiver) signal strength indication in device-dependent units/scale. Values: [0-254], UINT8_MAX: invalid/unknown.</field>
            <field type="uint8_t" name="txbuf" units="%">Remaining free transmitter buffer space.</field>
            <field type="uint8_t" name="noise" invalid="UINT8_MAX">Local background noise level. These are device dependent RSSI values (scale as approx 2x dB on SiK radios). Values: [0-254], UINT8_MAX: invalid/unknown.</field>
            <field type="uint8_t" name="remnoise" invalid="UINT8_MAX">Remote background noise level. These are device dependent RSSI values (scale as approx 2x dB on SiK radios). Values: [0-254], UINT8_MAX: invalid/unknown.</field>
            <field type="uint16_t" name="rxerrors">Count of radio packet receive errors (since boot).</field>
            <field type="uint16_t" name="fixed">Count of error corrected radio packets (since boot).</field>
        </message>

        <!-- Generic CAN frame -->
        <message id="200" name="GENERIC_CAN_FRAME">
            <description>Custom CAN frame message</description>
            <field type="uint32_t" name="id">CAN frame ID</field>
            <field type="uint8_t[8]" name="data">CAN frame payload</field>
            <field type="uint8_t" name="dlc">Data length code</field>
        </message>

        <!-- Debug frame -->
        <message id="201" name="DEBUG_FRAME">
            <description>Debug frame with status and text</description>
            <field type="uint8_t" name="status">Status code</field>
            <field type="char[50]" name="text">Debug text (null-terminated if shorter)</field>
        </message>
    </messages>
</mavlink>
